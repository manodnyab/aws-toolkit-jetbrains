name: Prerelease
on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for release'
        required: false
        default: prerelease
  push:
    branches: [manodnyb/addPrerelease2]


jobs:

  generate_artifact:
    strategy:
      matrix:
        supported_versions: [ '2023.3', '2023.2', '2023.1' ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.x'
      - name: Generate artifact
        run: |
        #  ./gradlew -PideProfileName=${{ matrix.supported_versions }} :plugin-toolkit:intellij:buildPlugin --exclude-task buildResharperPlugin
      #- name:  Upload artifact
      #  uses: actions/upload-artifact@v4
      #  with:
      #    name: plugin-toolkit-${{ matrix.supported_versions }}
      #    path: ./plugins/toolkit/intellij/build/distributions/*.zip
      #    retention-days: 1

  generate_changelog:
    runs-on: ubuntu-latest
    outputs:
      feature: ${{ steps.build.outputs.feature }}
      tagname: ${{ steps.build.outputs.tagname }}
      version: ${{ steps.build.outputs.version }}
      changes: ${{ steps.build.outputs.changes }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - if: github.event_name == 'workflow_dispatch'
        run: |
          echo "TAG_NAME=${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV

      - if: github.ref_name != 'main'
        run: |
          TAG_NAME=${{ github.ref_name }}
          # change to feature later
          FEAT_NAME=$(echo $TAG_NAME | sed 's/manodnyb\///')
          echo "FEAT_NAME=$FEAT_NAME" >> $GITHUB_ENV
          echo "TAG_NAME=pre-$FEAT_NAME" >> $GITHUB_ENV
      - if: github.ref_name == 'main'
        run: |
          echo "FEAT_NAME=" >> $GITHUB_ENV
          echo "TAG_NAME=prerelease" >> $GITHUB_ENV
      - name: Generate changelog
        id: changelog
        run: |
          ./gradlew createRelease
      - name: Provide the metadata to output
        id: read_changelog
        run: |
          echo "feature=$FEAT_NAME" >> $GITHUB_OUTPUT
          echo "tagname=$TAG_NAME" >> $GITHUB_OUTPUT
          echo 'changes<<EOF' >> $GITHUB_OUTPUT
          cat CHANGELOG.md | perl -ne 'BEGIN{$/="\n\n"} print; exit if $. == 1' >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
      - name: Get changelog output
        run: |
          echo "${{ steps.read_changelog.outputs.changes }}"
      
      
      
      

      #publish:
      #  needs: [upload_artifact]
      #  env:
      #    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #    GH_REPO: ${{ github.repository }}
      #  runs-on: ubuntu-latest
      #  permissions:
      #    contents: write

      #  steps:
      #    - uses: actions/checkout@v4
      #    - uses: actions/download-artifact@v4
      #    - name: Publish to GitHub Releases
      #      run: |
      #        gh release create v100.100.100 --draft --notes "Release notes" --title "Release title" --target $GITHUB_SHA plugin-toolkit/*.zip




